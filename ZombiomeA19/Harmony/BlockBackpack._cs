using Harmony;
using System.Reflection;
using UnityEngine;
using DMT;
using System;
using System.Collections.Generic;

// XUiCWindowSelector.public static void OpenSelectorAndWindow(EntityPlayerLocal _localPlayer, string selectedPage)
// XUiCWindowSelector.public void OpenSelectedWindow()

[HarmonyPatch(typeof(XUiCWindowSelector))] // XUiC_WindowSelector // XUiCWindowSelector
// [HarmonyPatch("XUiCWindowSelector")]
[HarmonyPatch("OpenSelectorAndWindow")]
// [HarmonyPatch("OpenSelectorAndWindow")]
public class BlockBackpack : IHarmony {
    public void Start() {
        Debug.Log(" Loading Patch: " + GetType().ToString());
        HarmonyInstance harmony = HarmonyInstance.Create(GetType().ToString());
        CSutils.Harmonys.ApplyOnce(harmony, Assembly.GetExecutingAssembly(), GetType());
        // harmony.PatchAll(Assembly.GetExecutingAssembly());
    }
 
    static bool Prefix(EntityPlayerLocal _localPlayer, string selectedPage) {
        Debug.Log("BlockBackpack Prefix hook");
        if (_localPlayer.Buffs.HasBuff("nosack")) return false;
        return true;
    }

}